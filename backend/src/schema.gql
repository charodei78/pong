# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Float!
  name: String!
  email: String!
  login: String!
  roles: [Role!]!
  created_at: DateTime!
  updated_at: DateTime
  avatar: [String!]!
}

enum Role {
  User
  Admin
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type RequestUser {
  id: Float
  name: String
  email: String
  login: String
  roles: [Role!]
  created_at: DateTime
  updated_at: DateTime
  avatar: [String!]
}

type ChatMessage {
  chat: Chat!
  created_at: DateTime!
  message: String!
  user: User!
}

type Chat {
  id: String!
  name: String
  owner: User
  type: ChatType!
  is_private: Boolean!
  messages(
    offset: Int

    """max limit 100"""
    limit: Int
  ): [ChatMessage!]!
  members: [User!]!
  banned: [User!]!
  admins: [User!]!
}

enum ChatType {
  Chat
  Channel
}

type JwtResponse {
  access_token: String!
}

type Query {
  user(id: Int!): User!
  users(offset: Int!, limit: Int!): [User!]!
  login(password: String!, login: String!): JwtResponse!
  getProfile: RequestUser!
  chat(id: String!): Chat!
}

type Mutation {
  createUser(input: CreateUserDto!): User!
  updateUser(input: UpdateUserDto!, id: Float!): User!
  removeUser(id: Float!): Boolean!
  createChatMessage(input: CreateChatMessageInput!): Boolean!
  createChat(createChatInput: CreateChatInput!): Chat!
  doSomethingWithUserInChat(userId: Int!, chatId: String!): Boolean!
  banUser(minutes: Int, userId: Int!, chatId: String!): Boolean!
  unbanUser(userId: Int!, chatId: String!): Boolean!
  updateChat(input: UpdateChatInput!): Chat!
  removeChat(id: String!): Chat!
}

input CreateUserDto {
  name: String!
  email: String!
  login: String!
  password: String!
}

input UpdateUserDto {
  name: String
  email: String
  login: String
  newPassword: String
  oldPassword: String
}

input CreateChatMessageInput {
  message: String!
  chatId: String!
}

input CreateChatInput {
  name: String
  members: [Int!]!
  type: ChatType!
  is_private: Boolean!
  password: String
}

input UpdateChatInput {
  name: String
  is_private: Boolean
  password: String
  id: String!
}

type Subscription {
  messageAdded(token: String!, chatId: String!): ChatMessage!
}
