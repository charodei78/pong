version: '3.9'

# Define environment variables
x-env: &default-env
  NODE_ENV: development
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: pong
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  DB_NAME: pong
  DB_PORT: 5432
  DB_HOST: db
  DATABASE_URL: postgresql://postgres:postgres@db:5432/pong?schema=public
  LINK2FA: localhost/account/2fa
  HOST: localhost
  MAIL_HOST: pong-online.ru
  ADMIN_PASS: admin
  BACKEND_HOST: localhost/api
  GAME_API_HOST: localhost:81
  NGINX_HOST: localhost
  NGINX_PORT: 80

services:
  db:
    image: postgres:14
    restart: always
    environment:
      <<: *default-env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  backend:
    image: node:16-alpine
    container_name: backend
    restart: always
    ports:
      - 3000:3000
      - 81:81
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    # change yarn to npm due this issue https://github.com/yarnpkg/yarn/issues/1496
    command: "sh -c 'chmod -R 777 /root && cd /app && npm install && npx prisma migrate deploy && npm run start:dev'"
    environment:
      <<: *default-env

  frontend:
    image: node:16-alpine
    container_name: frontend
    restart: always
    ports:
      - 3040:3040
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    # change yarn to npm due this issue https://github.com/yarnpkg/yarn/issues/1496
    command: "sh -c 'chmod -R 777 /root && cd /app && npm install && npm run dev'"
    environment:
      <<: *default-env

  web:
    image: nginx:1.21
    depends_on:
      - backend
      - frontend
    ports:
      - 80:80
    volumes:
      - ./nginx/templates/default.conf.template:/etc/nginx/templates/default.conf.template:ro
    command: ['nginx', '-g', 'daemon off;']
    environment:
      <<: *default-env
